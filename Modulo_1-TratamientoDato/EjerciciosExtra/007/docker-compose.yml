version: '2'
services:

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"
    
    networks:
      - kafka

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "topic_test:1:1"
    
    networks:
      - kafka
    
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    
    networks:
      - kafka


  db:
    image: mysql:latest
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: my_secret_password
      MYSQL_DATABASE: app_db
      MYSQL_USER: db_user
      MYSQL_PASSWORD: user_password
    ports:
      - "3308:3306"
    volumes:
      # copy the csv files to fill tables to the secure dir in the mysql container
      # - dbdata:/var/lib/mysql-files/
      # copy the .sql files to run into the mysql container
      - ./sql:/docker-entrypoint-initdb.d
    
    networks:
      - mysql

    env_file:
      - .env

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - db
    environment:
      PMA_HOST: mysql_host
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8081:80
    networks:
      - mysql
  
  grafana:
    image: grafana/grafana:7.5.7
    environment:
      - GF_DATABASE_HOST=db:3306
      - GF_DATABASE_NAME=app_db
      - GF_DATABASE_USER=db_user
      - GF_DATABASE_PASSWORD=user_password
      - GF_DATABASE_TYPE=mysql
      - GF_DATABASE_MAX_OPEN_CONN=300
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana

    depends_on: ["db"]

    networks:
      - mysql


  publisher:
    build: publisher
    restart: 'no'
    depends_on:
      - db
    
    networks:
      - kafka

  subscriber:
    build: subscriber
    restart: 'no'
    depends_on:
      - db

    networks:
      - mysql
      - kafka

    links:
      - db
      - kafka
    
    env_file:
      - .env


volumes:
  grafana-data:

networks:
  mysql:
    external: false
    name: mysql
    driver: bridge
  
  kafka:
    external: false
    name: kafka
    driver: bridge